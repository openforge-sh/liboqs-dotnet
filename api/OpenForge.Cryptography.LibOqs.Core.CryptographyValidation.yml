### YamlMime:ManagedReference
items:
- uid: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation
  commentId: T:OpenForge.Cryptography.LibOqs.Core.CryptographyValidation
  id: CryptographyValidation
  parent: OpenForge.Cryptography.LibOqs.Core
  children:
  - OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateAlgorithmName(System.String)
  - OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateAlgorithmSupport(System.Boolean,System.String)
  - OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateContextStringSupport(System.Boolean,System.String)
  - OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateNativeHandle(System.IntPtr,System.String)
  - OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateNonNegativeIndex(System.Int32,System.String)
  - OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateOperationResult(System.Int32,System.String,System.String,System.String)
  - OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateOperationResult(System.UInt32,System.String,System.String,System.String)
  - OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidatePointer(System.IntPtr,System.String)
  langs:
  - csharp
  - vb
  name: CryptographyValidation
  nameWithType: CryptographyValidation
  fullName: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation
  type: Class
  source:
    remote:
      path: src/Core/CryptographyValidation.cs
      branch: main
      repo: https://github.com/openforge-sh/liboqs-dotnet.git
    id: CryptographyValidation
    path: src/Core/CryptographyValidation.cs
    startLine: 8
  assemblies:
  - OpenForge.Cryptography.LibOqs.Core
  namespace: OpenForge.Cryptography.LibOqs.Core
  summary: >-
    Provides shared validation utilities for cryptographic operations.

    This class consolidates common validation logic used across KEM and signature implementations.
  example: []
  syntax:
    content: public static class CryptographyValidation
    content.vb: Public Module CryptographyValidation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateAlgorithmName(System.String)
  commentId: M:OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateAlgorithmName(System.String)
  id: ValidateAlgorithmName(System.String)
  parent: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation
  langs:
  - csharp
  - vb
  name: ValidateAlgorithmName(string?)
  nameWithType: CryptographyValidation.ValidateAlgorithmName(string?)
  fullName: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateAlgorithmName(string?)
  type: Method
  source:
    remote:
      path: src/Core/CryptographyValidation.cs
      branch: main
      repo: https://github.com/openforge-sh/liboqs-dotnet.git
    id: ValidateAlgorithmName
    path: src/Core/CryptographyValidation.cs
    startLine: 15
  assemblies:
  - OpenForge.Cryptography.LibOqs.Core
  namespace: OpenForge.Cryptography.LibOqs.Core
  summary: Validates that the algorithm name is not null, empty, or whitespace.
  example: []
  syntax:
    content: public static void ValidateAlgorithmName(string? algorithmName)
    parameters:
    - id: algorithmName
      type: System.String
      description: The algorithm name to validate.
    content.vb: Public Shared Sub ValidateAlgorithmName(algorithmName As String)
  overload: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateAlgorithmName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if algorithmName is null, empty, or whitespace.
  nameWithType.vb: CryptographyValidation.ValidateAlgorithmName(String)
  fullName.vb: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateAlgorithmName(String)
  name.vb: ValidateAlgorithmName(String)
- uid: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateAlgorithmSupport(System.Boolean,System.String)
  commentId: M:OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateAlgorithmSupport(System.Boolean,System.String)
  id: ValidateAlgorithmSupport(System.Boolean,System.String)
  parent: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation
  langs:
  - csharp
  - vb
  name: ValidateAlgorithmSupport(bool, string)
  nameWithType: CryptographyValidation.ValidateAlgorithmSupport(bool, string)
  fullName: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateAlgorithmSupport(bool, string)
  type: Method
  source:
    remote:
      path: src/Core/CryptographyValidation.cs
      branch: main
      repo: https://github.com/openforge-sh/liboqs-dotnet.git
    id: ValidateAlgorithmSupport
    path: src/Core/CryptographyValidation.cs
    startLine: 27
  assemblies:
  - OpenForge.Cryptography.LibOqs.Core
  namespace: OpenForge.Cryptography.LibOqs.Core
  summary: Validates that the algorithm is supported and enabled.
  example: []
  syntax:
    content: public static void ValidateAlgorithmSupport(bool isSupported, string algorithmName)
    parameters:
    - id: isSupported
      type: System.Boolean
      description: Whether the algorithm is supported.
    - id: algorithmName
      type: System.String
      description: The name of the algorithm.
    content.vb: Public Shared Sub ValidateAlgorithmSupport(isSupported As Boolean, algorithmName As String)
  overload: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateAlgorithmSupport*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Thrown if the algorithm is not supported or enabled.
  nameWithType.vb: CryptographyValidation.ValidateAlgorithmSupport(Boolean, String)
  fullName.vb: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateAlgorithmSupport(Boolean, String)
  name.vb: ValidateAlgorithmSupport(Boolean, String)
- uid: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateNativeHandle(System.IntPtr,System.String)
  commentId: M:OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateNativeHandle(System.IntPtr,System.String)
  id: ValidateNativeHandle(System.IntPtr,System.String)
  parent: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation
  langs:
  - csharp
  - vb
  name: ValidateNativeHandle(nint, string)
  nameWithType: CryptographyValidation.ValidateNativeHandle(nint, string)
  fullName: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateNativeHandle(nint, string)
  type: Method
  source:
    remote:
      path: src/Core/CryptographyValidation.cs
      branch: main
      repo: https://github.com/openforge-sh/liboqs-dotnet.git
    id: ValidateNativeHandle
    path: src/Core/CryptographyValidation.cs
    startLine: 40
  assemblies:
  - OpenForge.Cryptography.LibOqs.Core
  namespace: OpenForge.Cryptography.LibOqs.Core
  summary: Validates that a native handle is not null (IntPtr.Zero).
  example: []
  syntax:
    content: public static void ValidateNativeHandle(nint handle, string algorithmName)
    parameters:
    - id: handle
      type: System.IntPtr
      description: The native handle to validate.
    - id: algorithmName
      type: System.String
      description: The name of the algorithm for error messages.
    content.vb: Public Shared Sub ValidateNativeHandle(handle As IntPtr, algorithmName As String)
  overload: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateNativeHandle*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if the handle is null.
  nameWithType.vb: CryptographyValidation.ValidateNativeHandle(IntPtr, String)
  fullName.vb: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateNativeHandle(System.IntPtr, String)
  name.vb: ValidateNativeHandle(IntPtr, String)
- uid: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateOperationResult(System.Int32,System.String,System.String,System.String)
  commentId: M:OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateOperationResult(System.Int32,System.String,System.String,System.String)
  id: ValidateOperationResult(System.Int32,System.String,System.String,System.String)
  parent: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation
  langs:
  - csharp
  - vb
  name: ValidateOperationResult(int, string, string, string?)
  nameWithType: CryptographyValidation.ValidateOperationResult(int, string, string, string?)
  fullName: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateOperationResult(int, string, string, string?)
  type: Method
  source:
    remote:
      path: src/Core/CryptographyValidation.cs
      branch: main
      repo: https://github.com/openforge-sh/liboqs-dotnet.git
    id: ValidateOperationResult
    path: src/Core/CryptographyValidation.cs
    startLine: 55
  assemblies:
  - OpenForge.Cryptography.LibOqs.Core
  namespace: OpenForge.Cryptography.LibOqs.Core
  summary: Validates that an operation result indicates success (typically 0 for liboqs).
  example: []
  syntax:
    content: public static void ValidateOperationResult(int result, string operationName, string algorithmName, string? additionalInfo = null)
    parameters:
    - id: result
      type: System.Int32
      description: The result code from the operation.
    - id: operationName
      type: System.String
      description: The name of the operation for error messages.
    - id: algorithmName
      type: System.String
      description: The name of the algorithm for error messages.
    - id: additionalInfo
      type: System.String
      description: Additional information for error messages.
    content.vb: Public Shared Sub ValidateOperationResult(result As Integer, operationName As String, algorithmName As String, additionalInfo As String = Nothing)
  overload: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateOperationResult*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if the operation failed.
  nameWithType.vb: CryptographyValidation.ValidateOperationResult(Integer, String, String, String)
  fullName.vb: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateOperationResult(Integer, String, String, String)
  name.vb: ValidateOperationResult(Integer, String, String, String)
- uid: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateOperationResult(System.UInt32,System.String,System.String,System.String)
  commentId: M:OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateOperationResult(System.UInt32,System.String,System.String,System.String)
  id: ValidateOperationResult(System.UInt32,System.String,System.String,System.String)
  parent: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation
  langs:
  - csharp
  - vb
  name: ValidateOperationResult(uint, string, string, string?)
  nameWithType: CryptographyValidation.ValidateOperationResult(uint, string, string, string?)
  fullName: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateOperationResult(uint, string, string, string?)
  type: Method
  source:
    remote:
      path: src/Core/CryptographyValidation.cs
      branch: main
      repo: https://github.com/openforge-sh/liboqs-dotnet.git
    id: ValidateOperationResult
    path: src/Core/CryptographyValidation.cs
    startLine: 75
  assemblies:
  - OpenForge.Cryptography.LibOqs.Core
  namespace: OpenForge.Cryptography.LibOqs.Core
  summary: Validates that an operation result indicates success (typically 0 for liboqs).
  example: []
  syntax:
    content: public static void ValidateOperationResult(uint result, string operationName, string algorithmName, string? additionalInfo = null)
    parameters:
    - id: result
      type: System.UInt32
      description: The result code from the operation.
    - id: operationName
      type: System.String
      description: The name of the operation for error messages.
    - id: algorithmName
      type: System.String
      description: The name of the algorithm for error messages.
    - id: additionalInfo
      type: System.String
      description: Additional information for error messages.
    content.vb: Public Shared Sub ValidateOperationResult(result As UInteger, operationName As String, algorithmName As String, additionalInfo As String = Nothing)
  overload: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateOperationResult*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if the operation failed.
  nameWithType.vb: CryptographyValidation.ValidateOperationResult(UInteger, String, String, String)
  fullName.vb: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateOperationResult(UInteger, String, String, String)
  name.vb: ValidateOperationResult(UInteger, String, String, String)
- uid: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateNonNegativeIndex(System.Int32,System.String)
  commentId: M:OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateNonNegativeIndex(System.Int32,System.String)
  id: ValidateNonNegativeIndex(System.Int32,System.String)
  parent: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation
  langs:
  - csharp
  - vb
  name: ValidateNonNegativeIndex(int, string)
  nameWithType: CryptographyValidation.ValidateNonNegativeIndex(int, string)
  fullName: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateNonNegativeIndex(int, string)
  type: Method
  source:
    remote:
      path: src/Core/CryptographyValidation.cs
      branch: main
      repo: https://github.com/openforge-sh/liboqs-dotnet.git
    id: ValidateNonNegativeIndex
    path: src/Core/CryptographyValidation.cs
    startLine: 93
  assemblies:
  - OpenForge.Cryptography.LibOqs.Core
  namespace: OpenForge.Cryptography.LibOqs.Core
  summary: Validates that an index is non-negative.
  example: []
  syntax:
    content: public static void ValidateNonNegativeIndex(int index, string parameterName = "index")
    parameters:
    - id: index
      type: System.Int32
      description: The index to validate.
    - id: parameterName
      type: System.String
      description: The name of the parameter for exception messages.
    content.vb: Public Shared Sub ValidateNonNegativeIndex(index As Integer, parameterName As String = "index")
  overload: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateNonNegativeIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown if the index is negative.
  nameWithType.vb: CryptographyValidation.ValidateNonNegativeIndex(Integer, String)
  fullName.vb: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateNonNegativeIndex(Integer, String)
  name.vb: ValidateNonNegativeIndex(Integer, String)
- uid: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidatePointer(System.IntPtr,System.String)
  commentId: M:OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidatePointer(System.IntPtr,System.String)
  id: ValidatePointer(System.IntPtr,System.String)
  parent: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation
  langs:
  - csharp
  - vb
  name: ValidatePointer(nint, string)
  nameWithType: CryptographyValidation.ValidatePointer(nint, string)
  fullName: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidatePointer(nint, string)
  type: Method
  source:
    remote:
      path: src/Core/CryptographyValidation.cs
      branch: main
      repo: https://github.com/openforge-sh/liboqs-dotnet.git
    id: ValidatePointer
    path: src/Core/CryptographyValidation.cs
    startLine: 106
  assemblies:
  - OpenForge.Cryptography.LibOqs.Core
  namespace: OpenForge.Cryptography.LibOqs.Core
  summary: Validates that a pointer is not null.
  example: []
  syntax:
    content: public static void ValidatePointer(nint memPtr, string operationName)
    parameters:
    - id: memPtr
      type: System.IntPtr
      description: The pointer to validate.
    - id: operationName
      type: System.String
      description: The name of the operation for error messages.
    content.vb: Public Shared Sub ValidatePointer(memPtr As IntPtr, operationName As String)
  overload: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidatePointer*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown if the pointer is null.
  nameWithType.vb: CryptographyValidation.ValidatePointer(IntPtr, String)
  fullName.vb: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidatePointer(System.IntPtr, String)
  name.vb: ValidatePointer(IntPtr, String)
- uid: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateContextStringSupport(System.Boolean,System.String)
  commentId: M:OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateContextStringSupport(System.Boolean,System.String)
  id: ValidateContextStringSupport(System.Boolean,System.String)
  parent: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation
  langs:
  - csharp
  - vb
  name: ValidateContextStringSupport(bool, string)
  nameWithType: CryptographyValidation.ValidateContextStringSupport(bool, string)
  fullName: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateContextStringSupport(bool, string)
  type: Method
  source:
    remote:
      path: src/Core/CryptographyValidation.cs
      branch: main
      repo: https://github.com/openforge-sh/liboqs-dotnet.git
    id: ValidateContextStringSupport
    path: src/Core/CryptographyValidation.cs
    startLine: 119
  assemblies:
  - OpenForge.Cryptography.LibOqs.Core
  namespace: OpenForge.Cryptography.LibOqs.Core
  summary: Validates that a context string is supported by the algorithm.
  example: []
  syntax:
    content: public static void ValidateContextStringSupport(bool supportsContext, string algorithmName)
    parameters:
    - id: supportsContext
      type: System.Boolean
      description: Whether the algorithm supports context strings.
    - id: algorithmName
      type: System.String
      description: The name of the algorithm.
    content.vb: Public Shared Sub ValidateContextStringSupport(supportsContext As Boolean, algorithmName As String)
  overload: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateContextStringSupport*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Thrown if the algorithm doesn't support context strings.
  nameWithType.vb: CryptographyValidation.ValidateContextStringSupport(Boolean, String)
  fullName.vb: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateContextStringSupport(Boolean, String)
  name.vb: ValidateContextStringSupport(Boolean, String)
references:
- uid: OpenForge.Cryptography.LibOqs.Core
  commentId: N:OpenForge.Cryptography.LibOqs.Core
  href: OpenForge.html
  name: OpenForge.Cryptography.LibOqs.Core
  nameWithType: OpenForge.Cryptography.LibOqs.Core
  fullName: OpenForge.Cryptography.LibOqs.Core
  spec.csharp:
  - uid: OpenForge
    name: OpenForge
    href: OpenForge.html
  - name: .
  - uid: OpenForge.Cryptography
    name: Cryptography
    href: OpenForge.Cryptography.html
  - name: .
  - uid: OpenForge.Cryptography.LibOqs
    name: LibOqs
    href: OpenForge.Cryptography.LibOqs.html
  - name: .
  - uid: OpenForge.Cryptography.LibOqs.Core
    name: Core
    href: OpenForge.Cryptography.LibOqs.Core.html
  spec.vb:
  - uid: OpenForge
    name: OpenForge
    href: OpenForge.html
  - name: .
  - uid: OpenForge.Cryptography
    name: Cryptography
    href: OpenForge.Cryptography.html
  - name: .
  - uid: OpenForge.Cryptography.LibOqs
    name: LibOqs
    href: OpenForge.Cryptography.LibOqs.html
  - name: .
  - uid: OpenForge.Cryptography.LibOqs.Core
    name: Core
    href: OpenForge.Cryptography.LibOqs.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateAlgorithmName*
  commentId: Overload:OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateAlgorithmName
  href: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.html#OpenForge_Cryptography_LibOqs_Core_CryptographyValidation_ValidateAlgorithmName_System_String_
  name: ValidateAlgorithmName
  nameWithType: CryptographyValidation.ValidateAlgorithmName
  fullName: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateAlgorithmName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.notsupportedexception
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateAlgorithmSupport*
  commentId: Overload:OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateAlgorithmSupport
  href: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.html#OpenForge_Cryptography_LibOqs_Core_CryptographyValidation_ValidateAlgorithmSupport_System_Boolean_System_String_
  name: ValidateAlgorithmSupport
  nameWithType: CryptographyValidation.ValidateAlgorithmSupport
  fullName: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateAlgorithmSupport
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateNativeHandle*
  commentId: Overload:OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateNativeHandle
  href: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.html#OpenForge_Cryptography_LibOqs_Core_CryptographyValidation_ValidateNativeHandle_System_IntPtr_System_String_
  name: ValidateNativeHandle
  nameWithType: CryptographyValidation.ValidateNativeHandle
  fullName: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateNativeHandle
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: nint
  nameWithType: nint
  fullName: nint
  nameWithType.vb: IntPtr
  fullName.vb: System.IntPtr
  name.vb: IntPtr
- uid: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateOperationResult*
  commentId: Overload:OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateOperationResult
  href: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.html#OpenForge_Cryptography_LibOqs_Core_CryptographyValidation_ValidateOperationResult_System_Int32_System_String_System_String_System_String_
  name: ValidateOperationResult
  nameWithType: CryptographyValidation.ValidateOperationResult
  fullName: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateOperationResult
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateNonNegativeIndex*
  commentId: Overload:OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateNonNegativeIndex
  href: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.html#OpenForge_Cryptography_LibOqs_Core_CryptographyValidation_ValidateNonNegativeIndex_System_Int32_System_String_
  name: ValidateNonNegativeIndex
  nameWithType: CryptographyValidation.ValidateNonNegativeIndex
  fullName: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateNonNegativeIndex
- uid: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidatePointer*
  commentId: Overload:OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidatePointer
  href: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.html#OpenForge_Cryptography_LibOqs_Core_CryptographyValidation_ValidatePointer_System_IntPtr_System_String_
  name: ValidatePointer
  nameWithType: CryptographyValidation.ValidatePointer
  fullName: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidatePointer
- uid: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateContextStringSupport*
  commentId: Overload:OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateContextStringSupport
  href: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.html#OpenForge_Cryptography_LibOqs_Core_CryptographyValidation_ValidateContextStringSupport_System_Boolean_System_String_
  name: ValidateContextStringSupport
  nameWithType: CryptographyValidation.ValidateContextStringSupport
  fullName: OpenForge.Cryptography.LibOqs.Core.CryptographyValidation.ValidateContextStringSupport
