### YamlMime:ManagedReference
items:
- uid: OpenForge.Cryptography.LibOqs.KEM.KeyPair
  commentId: T:OpenForge.Cryptography.LibOqs.KEM.KeyPair
  id: KeyPair
  parent: OpenForge.Cryptography.LibOqs.KEM
  children:
  - OpenForge.Cryptography.LibOqs.KEM.KeyPair.#ctor(System.Byte[],System.Byte[])
  - OpenForge.Cryptography.LibOqs.KEM.KeyPair.Dispose
  - OpenForge.Cryptography.LibOqs.KEM.KeyPair.PublicKey
  - OpenForge.Cryptography.LibOqs.KEM.KeyPair.SecretKey
  langs:
  - csharp
  - vb
  name: KeyPair
  nameWithType: KeyPair
  fullName: OpenForge.Cryptography.LibOqs.KEM.KeyPair
  type: Struct
  source:
    remote:
      path: src/KEM/KemProvider.cs
      branch: main
      repo: https://github.com/openforge-sh/liboqs-dotnet.git
    id: KeyPair
    path: src/KEM/KemProvider.cs
    startLine: 331
  assemblies:
  - OpenForge.Cryptography.LibOqs.KEM
  namespace: OpenForge.Cryptography.LibOqs.KEM
  summary: >-
    Represents a cryptographic key pair consisting of a public key and a secret key.

    The secret key is securely cleared when the KeyPair is disposed.
  example: []
  syntax:
    content: 'public readonly record struct KeyPair : IDisposable, IEquatable<KeyPair>'
    content.vb: Public Structure KeyPair Implements IDisposable, IEquatable(Of KeyPair)
  implements:
  - System.IDisposable
  - System.IEquatable{OpenForge.Cryptography.LibOqs.KEM.KeyPair}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: OpenForge.Cryptography.LibOqs.KEM.KeyPair.#ctor(System.Byte[],System.Byte[])
  commentId: M:OpenForge.Cryptography.LibOqs.KEM.KeyPair.#ctor(System.Byte[],System.Byte[])
  id: '#ctor(System.Byte[],System.Byte[])'
  parent: OpenForge.Cryptography.LibOqs.KEM.KeyPair
  langs:
  - csharp
  - vb
  name: KeyPair(byte[], byte[])
  nameWithType: KeyPair.KeyPair(byte[], byte[])
  fullName: OpenForge.Cryptography.LibOqs.KEM.KeyPair.KeyPair(byte[], byte[])
  type: Constructor
  source:
    remote:
      path: src/KEM/KemProvider.cs
      branch: main
      repo: https://github.com/openforge-sh/liboqs-dotnet.git
    id: .ctor
    path: src/KEM/KemProvider.cs
    startLine: 331
  assemblies:
  - OpenForge.Cryptography.LibOqs.KEM
  namespace: OpenForge.Cryptography.LibOqs.KEM
  summary: >-
    Represents a cryptographic key pair consisting of a public key and a secret key.

    The secret key is securely cleared when the KeyPair is disposed.
  example: []
  syntax:
    content: public KeyPair(byte[] PublicKey, byte[] SecretKey)
    parameters:
    - id: PublicKey
      type: System.Byte[]
      description: The public key that can be shared for encapsulation operations.
    - id: SecretKey
      type: System.Byte[]
      description: The secret key that must be kept private for decapsulation operations.
    content.vb: Public Sub New(PublicKey As Byte(), SecretKey As Byte())
  overload: OpenForge.Cryptography.LibOqs.KEM.KeyPair.#ctor*
  nameWithType.vb: KeyPair.New(Byte(), Byte())
  fullName.vb: OpenForge.Cryptography.LibOqs.KEM.KeyPair.New(Byte(), Byte())
  name.vb: New(Byte(), Byte())
- uid: OpenForge.Cryptography.LibOqs.KEM.KeyPair.PublicKey
  commentId: P:OpenForge.Cryptography.LibOqs.KEM.KeyPair.PublicKey
  id: PublicKey
  parent: OpenForge.Cryptography.LibOqs.KEM.KeyPair
  langs:
  - csharp
  - vb
  name: PublicKey
  nameWithType: KeyPair.PublicKey
  fullName: OpenForge.Cryptography.LibOqs.KEM.KeyPair.PublicKey
  type: Property
  source:
    remote:
      path: src/KEM/KemProvider.cs
      branch: main
      repo: https://github.com/openforge-sh/liboqs-dotnet.git
    id: PublicKey
    path: src/KEM/KemProvider.cs
    startLine: 332
  assemblies:
  - OpenForge.Cryptography.LibOqs.KEM
  namespace: OpenForge.Cryptography.LibOqs.KEM
  summary: The public key that can be shared for encapsulation operations.
  example: []
  syntax:
    content: public byte[] PublicKey { get; init; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property PublicKey As Byte()
  overload: OpenForge.Cryptography.LibOqs.KEM.KeyPair.PublicKey*
- uid: OpenForge.Cryptography.LibOqs.KEM.KeyPair.SecretKey
  commentId: P:OpenForge.Cryptography.LibOqs.KEM.KeyPair.SecretKey
  id: SecretKey
  parent: OpenForge.Cryptography.LibOqs.KEM.KeyPair
  langs:
  - csharp
  - vb
  name: SecretKey
  nameWithType: KeyPair.SecretKey
  fullName: OpenForge.Cryptography.LibOqs.KEM.KeyPair.SecretKey
  type: Property
  source:
    remote:
      path: src/KEM/KemProvider.cs
      branch: main
      repo: https://github.com/openforge-sh/liboqs-dotnet.git
    id: SecretKey
    path: src/KEM/KemProvider.cs
    startLine: 332
  assemblies:
  - OpenForge.Cryptography.LibOqs.KEM
  namespace: OpenForge.Cryptography.LibOqs.KEM
  summary: The secret key that must be kept private for decapsulation operations.
  example: []
  syntax:
    content: public byte[] SecretKey { get; init; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property SecretKey As Byte()
  overload: OpenForge.Cryptography.LibOqs.KEM.KeyPair.SecretKey*
- uid: OpenForge.Cryptography.LibOqs.KEM.KeyPair.Dispose
  commentId: M:OpenForge.Cryptography.LibOqs.KEM.KeyPair.Dispose
  id: Dispose
  parent: OpenForge.Cryptography.LibOqs.KEM.KeyPair
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: KeyPair.Dispose()
  fullName: OpenForge.Cryptography.LibOqs.KEM.KeyPair.Dispose()
  type: Method
  source:
    remote:
      path: src/KEM/KemProvider.cs
      branch: main
      repo: https://github.com/openforge-sh/liboqs-dotnet.git
    id: Dispose
    path: src/KEM/KemProvider.cs
    startLine: 338
  assemblies:
  - OpenForge.Cryptography.LibOqs.KEM
  namespace: OpenForge.Cryptography.LibOqs.KEM
  summary: >-
    Securely clears the secret key from memory to prevent information leakage.

    The public key does not need secure clearing as it is not sensitive.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: OpenForge.Cryptography.LibOqs.KEM.KeyPair.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: OpenForge.Cryptography.LibOqs.KEM
  commentId: N:OpenForge.Cryptography.LibOqs.KEM
  href: OpenForge.html
  name: OpenForge.Cryptography.LibOqs.KEM
  nameWithType: OpenForge.Cryptography.LibOqs.KEM
  fullName: OpenForge.Cryptography.LibOqs.KEM
  spec.csharp:
  - uid: OpenForge
    name: OpenForge
    href: OpenForge.html
  - name: .
  - uid: OpenForge.Cryptography
    name: Cryptography
    href: OpenForge.Cryptography.html
  - name: .
  - uid: OpenForge.Cryptography.LibOqs
    name: LibOqs
    href: OpenForge.Cryptography.LibOqs.html
  - name: .
  - uid: OpenForge.Cryptography.LibOqs.KEM
    name: KEM
    href: OpenForge.Cryptography.LibOqs.KEM.html
  spec.vb:
  - uid: OpenForge
    name: OpenForge
    href: OpenForge.html
  - name: .
  - uid: OpenForge.Cryptography
    name: Cryptography
    href: OpenForge.Cryptography.html
  - name: .
  - uid: OpenForge.Cryptography.LibOqs
    name: LibOqs
    href: OpenForge.Cryptography.LibOqs.html
  - name: .
  - uid: OpenForge.Cryptography.LibOqs.KEM
    name: KEM
    href: OpenForge.Cryptography.LibOqs.KEM.html
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.IEquatable{OpenForge.Cryptography.LibOqs.KEM.KeyPair}
  commentId: T:System.IEquatable{OpenForge.Cryptography.LibOqs.KEM.KeyPair}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<KeyPair>
  nameWithType: IEquatable<KeyPair>
  fullName: System.IEquatable<OpenForge.Cryptography.LibOqs.KEM.KeyPair>
  nameWithType.vb: IEquatable(Of KeyPair)
  fullName.vb: System.IEquatable(Of OpenForge.Cryptography.LibOqs.KEM.KeyPair)
  name.vb: IEquatable(Of KeyPair)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: OpenForge.Cryptography.LibOqs.KEM.KeyPair
    name: KeyPair
    href: OpenForge.Cryptography.LibOqs.KEM.KeyPair.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenForge.Cryptography.LibOqs.KEM.KeyPair
    name: KeyPair
    href: OpenForge.Cryptography.LibOqs.KEM.KeyPair.html
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: OpenForge.Cryptography.LibOqs.KEM.KeyPair.#ctor*
  commentId: Overload:OpenForge.Cryptography.LibOqs.KEM.KeyPair.#ctor
  href: OpenForge.Cryptography.LibOqs.KEM.KeyPair.html#OpenForge_Cryptography_LibOqs_KEM_KeyPair__ctor_System_Byte___System_Byte___
  name: KeyPair
  nameWithType: KeyPair.KeyPair
  fullName: OpenForge.Cryptography.LibOqs.KEM.KeyPair.KeyPair
  nameWithType.vb: KeyPair.New
  fullName.vb: OpenForge.Cryptography.LibOqs.KEM.KeyPair.New
  name.vb: New
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: OpenForge.Cryptography.LibOqs.KEM.KeyPair.PublicKey*
  commentId: Overload:OpenForge.Cryptography.LibOqs.KEM.KeyPair.PublicKey
  href: OpenForge.Cryptography.LibOqs.KEM.KeyPair.html#OpenForge_Cryptography_LibOqs_KEM_KeyPair_PublicKey
  name: PublicKey
  nameWithType: KeyPair.PublicKey
  fullName: OpenForge.Cryptography.LibOqs.KEM.KeyPair.PublicKey
- uid: OpenForge.Cryptography.LibOqs.KEM.KeyPair.SecretKey*
  commentId: Overload:OpenForge.Cryptography.LibOqs.KEM.KeyPair.SecretKey
  href: OpenForge.Cryptography.LibOqs.KEM.KeyPair.html#OpenForge_Cryptography_LibOqs_KEM_KeyPair_SecretKey
  name: SecretKey
  nameWithType: KeyPair.SecretKey
  fullName: OpenForge.Cryptography.LibOqs.KEM.KeyPair.SecretKey
- uid: OpenForge.Cryptography.LibOqs.KEM.KeyPair.Dispose*
  commentId: Overload:OpenForge.Cryptography.LibOqs.KEM.KeyPair.Dispose
  href: OpenForge.Cryptography.LibOqs.KEM.KeyPair.html#OpenForge_Cryptography_LibOqs_KEM_KeyPair_Dispose
  name: Dispose
  nameWithType: KeyPair.Dispose
  fullName: OpenForge.Cryptography.LibOqs.KEM.KeyPair.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
